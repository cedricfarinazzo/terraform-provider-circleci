name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run tests
      run: go test ./...
    
    - name: Run go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files need formatting:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Build
      run: go build -o terraform-provider-circleci

  acceptance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run acceptance tests
      env:
        TF_ACC: "1"
        CIRCLECI_TOKEN: ${{ secrets.CIRCLECI_TOKEN }}
      run: go test ./... -v -timeout 120m
      if: env.CIRCLECI_TOKEN != ''

  build-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/terraform-provider-circleci_linux_amd64
        GOOS=linux GOARCH=arm64 go build -o dist/terraform-provider-circleci_linux_arm64
        GOOS=darwin GOARCH=amd64 go build -o dist/terraform-provider-circleci_darwin_amd64
        GOOS=darwin GOARCH=arm64 go build -o dist/terraform-provider-circleci_darwin_arm64
        GOOS=windows GOARCH=amd64 go build -o dist/terraform-provider-circleci_windows_amd64.exe
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
